// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/clientstream.proto

/*
Package clientstream is a generated protocol buffer package.

It is generated from these files:
	proto/clientstream.proto

It has these top-level messages:
	Greeting
	LongManyGreetRequest
	LongManyGreetResponse
*/
package clientstream

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Greeting struct {
	Firstname string `protobuf:"bytes,1,opt,name=firstname" json:"firstname,omitempty"`
	Lastname  string `protobuf:"bytes,2,opt,name=lastname" json:"lastname,omitempty"`
}

func (m *Greeting) Reset()                    { *m = Greeting{} }
func (m *Greeting) String() string            { return proto.CompactTextString(m) }
func (*Greeting) ProtoMessage()               {}
func (*Greeting) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Greeting) GetFirstname() string {
	if m != nil {
		return m.Firstname
	}
	return ""
}

func (m *Greeting) GetLastname() string {
	if m != nil {
		return m.Lastname
	}
	return ""
}

type LongManyGreetRequest struct {
	Greeting *Greeting `protobuf:"bytes,1,opt,name=greeting" json:"greeting,omitempty"`
}

func (m *LongManyGreetRequest) Reset()                    { *m = LongManyGreetRequest{} }
func (m *LongManyGreetRequest) String() string            { return proto.CompactTextString(m) }
func (*LongManyGreetRequest) ProtoMessage()               {}
func (*LongManyGreetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LongManyGreetRequest) GetGreeting() *Greeting {
	if m != nil {
		return m.Greeting
	}
	return nil
}

type LongManyGreetResponse struct {
	Result string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *LongManyGreetResponse) Reset()                    { *m = LongManyGreetResponse{} }
func (m *LongManyGreetResponse) String() string            { return proto.CompactTextString(m) }
func (*LongManyGreetResponse) ProtoMessage()               {}
func (*LongManyGreetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LongManyGreetResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*Greeting)(nil), "clientstream.Greeting")
	proto.RegisterType((*LongManyGreetRequest)(nil), "clientstream.LongManyGreetRequest")
	proto.RegisterType((*LongManyGreetResponse)(nil), "clientstream.LongManyGreetResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for LongGreet service

type LongGreetClient interface {
	LongManyGreet(ctx context.Context, opts ...grpc.CallOption) (LongGreet_LongManyGreetClient, error)
}

type longGreetClient struct {
	cc *grpc.ClientConn
}

func NewLongGreetClient(cc *grpc.ClientConn) LongGreetClient {
	return &longGreetClient{cc}
}

func (c *longGreetClient) LongManyGreet(ctx context.Context, opts ...grpc.CallOption) (LongGreet_LongManyGreetClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_LongGreet_serviceDesc.Streams[0], c.cc, "/clientstream.LongGreet/LongManyGreet", opts...)
	if err != nil {
		return nil, err
	}
	x := &longGreetLongManyGreetClient{stream}
	return x, nil
}

type LongGreet_LongManyGreetClient interface {
	Send(*LongManyGreetRequest) error
	CloseAndRecv() (*LongManyGreetResponse, error)
	grpc.ClientStream
}

type longGreetLongManyGreetClient struct {
	grpc.ClientStream
}

func (x *longGreetLongManyGreetClient) Send(m *LongManyGreetRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *longGreetLongManyGreetClient) CloseAndRecv() (*LongManyGreetResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(LongManyGreetResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for LongGreet service

type LongGreetServer interface {
	LongManyGreet(LongGreet_LongManyGreetServer) error
}

func RegisterLongGreetServer(s *grpc.Server, srv LongGreetServer) {
	s.RegisterService(&_LongGreet_serviceDesc, srv)
}

func _LongGreet_LongManyGreet_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(LongGreetServer).LongManyGreet(&longGreetLongManyGreetServer{stream})
}

type LongGreet_LongManyGreetServer interface {
	SendAndClose(*LongManyGreetResponse) error
	Recv() (*LongManyGreetRequest, error)
	grpc.ServerStream
}

type longGreetLongManyGreetServer struct {
	grpc.ServerStream
}

func (x *longGreetLongManyGreetServer) SendAndClose(m *LongManyGreetResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *longGreetLongManyGreetServer) Recv() (*LongManyGreetRequest, error) {
	m := new(LongManyGreetRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _LongGreet_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clientstream.LongGreet",
	HandlerType: (*LongGreetServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "LongManyGreet",
			Handler:       _LongGreet_LongManyGreet_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "proto/clientstream.proto",
}

func init() { proto.RegisterFile("proto/clientstream.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x28, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0xce, 0xc9, 0x4c, 0xcd, 0x2b, 0x29, 0x2e, 0x29, 0x4a, 0x4d, 0xcc, 0xd5, 0x03,
	0x0b, 0x09, 0xf1, 0x20, 0x8b, 0x29, 0xb9, 0x70, 0x71, 0xb8, 0x17, 0xa5, 0xa6, 0x96, 0x64, 0xe6,
	0xa5, 0x0b, 0xc9, 0x70, 0x71, 0xa6, 0x65, 0x16, 0x15, 0x97, 0xe4, 0x25, 0xe6, 0xa6, 0x4a, 0x30,
	0x2a, 0x30, 0x6a, 0x70, 0x06, 0x21, 0x04, 0x84, 0xa4, 0xb8, 0x38, 0x72, 0x12, 0xa1, 0x92, 0x4c,
	0x60, 0x49, 0x38, 0x5f, 0xc9, 0x8b, 0x4b, 0xc4, 0x27, 0x3f, 0x2f, 0xdd, 0x37, 0x31, 0xaf, 0x12,
	0x6c, 0x5a, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x11, 0x17, 0x47, 0x3a, 0xd4, 0x74,
	0xb0, 0x81, 0xdc, 0x46, 0x62, 0x7a, 0x28, 0x4e, 0x82, 0xd9, 0x1d, 0x04, 0x57, 0xa7, 0xa4, 0xcf,
	0x25, 0x8a, 0x66, 0x56, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x90, 0x18, 0x17, 0x5b, 0x51, 0x6a,
	0x71, 0x69, 0x4e, 0x09, 0xd4, 0x6d, 0x50, 0x9e, 0x51, 0x26, 0x17, 0x27, 0x48, 0x03, 0x58, 0xb1,
	0x50, 0x0c, 0x17, 0x2f, 0x8a, 0x6e, 0x21, 0x25, 0x54, 0x0b, 0xb1, 0x39, 0x53, 0x4a, 0x19, 0xaf,
	0x1a, 0x88, 0xf5, 0x4a, 0x0c, 0x1a, 0x8c, 0x49, 0x6c, 0xe0, 0x20, 0x34, 0x06, 0x04, 0x00, 0x00,
	0xff, 0xff, 0xd4, 0x99, 0xdd, 0x2b, 0x5e, 0x01, 0x00, 0x00,
}
